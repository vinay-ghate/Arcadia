/* style.css (SCROLL-FREE VERSION) */

:root {
    --background: #1a1a1a;
    --game-board-bg: #0a0a0a;
    --cell-border: rgba(255, 255, 255, 0.05);
    --text-glow-color: rgba(0, 225, 255, 0.7);
    --button-bg-start: #3d3d3d;
    --button-bg-end: #2a2a2a;
    --button-border: #111;
    --button-shadow: rgba(0, 0, 0, 0.7);
    --button-inset-shadow: rgba(255, 255, 255, 0.15);
}

body {
    font-family: 'Orbitron', sans-serif;
    background-color: var(--background);
    color: #e0e0e0;

    /* --- CORE LAYOUT FIX: NO SCROLLING --- */
    margin: 0;
    /* Force body to be exactly the height of the screen */
    height: 100vh; 
    height: 100dvh; /* More accurate for mobile */
    /* Prevent any content from overflowing */
    overflow: hidden;
}

.game-wrapper {
    width: 100%;
    height: 100%;
    padding: 1rem;
    box-sizing: border-box;

    /* Use flexbox to manage vertical space */
    display: flex;
    flex-direction: column;
}

.game-header {
    flex-shrink: 0; /* Don't shrink the header */
    text-align: center;
    margin-bottom: 1rem;
}

.game-layout {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;

    /* Make the game area flexible to fill remaining space */
    flex-grow: 1;
    min-height: 0; /* Flexbox trick to allow shrinking */
}

#game-board-container {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.game-board {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(20, 1fr);
    aspect-ratio: 10 / 20;
    
    /* The board's height is now constrained by its parent container */
    height: 100%;
    width: auto;

    background-color: var(--game-board-bg);
    border: 2px solid #333;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
    background-image: linear-gradient(var(--cell-border) 1px, transparent 1px), linear-gradient(90deg, var(--cell-border) 1px, transparent 1px);
    background-size: 10% 5%;
}

.sidebar {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    max-height: 550px; /* Prevent sidebar from getting too tall */
    width: 140px;
    flex-shrink: 0;
}

.next-piece {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    width: 100px;
    aspect-ratio: 1 / 1;
    background-color: var(--game-board-bg);
    border: 2px solid #333;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
    background-image: linear-gradient(var(--cell-border) 1px, transparent 1px), linear-gradient(90deg, var(--cell-border) 1px, transparent 1px);
    background-size: 25% 25%;
}

.score-box {
    background: #111;
    border: 2px solid #333;
}

.on-screen-controls {
    flex-shrink: 0; /* Don't shrink the controls */
    padding-top: 1rem;
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
}

/* --- Block & UI Element Styles --- */
.cell { width: 100%; height: 100%; }
.block-i, .block-o, .block-t, .block-l, .block-j, .block-s, .block-z { /* ... same as before ... */ }
.btn-control { /* ... same as before ... */ }
.text-glow { /* ... same as before ... */ }

/*
====================================
=== RESPONSIVE LAYOUT FOR MOBILE ====
====================================
*/
@media (max-width: 640px) {
    .game-layout {
        flex-direction: column;
        gap: 1rem;
    }
    
    #game-board-container {
        width: 100%;
        height: auto;
        flex-grow: 1; /* Allow board to take up vertical space */
        min-height: 0;
    }

    .game-board {
        width: auto;
        height: 100%;
        margin: 0 auto; /* Center the board */
    }

    .sidebar {
        flex-direction: row;
        align-items: flex-end;
        width: 100%;
        height: auto;
        gap: 1rem;
    }

    .sidebar > div {
        flex: 1;
    }

    .next-piece {
        width: 80px;
    }
}

.back-button {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 50; /* High z-index to be on top of everything */
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    color: white;
    text-decoration: none;
    background: var(--button-bg-end);
    border: 1px solid var(--button-border);
    border-radius: 50%;
    box-shadow: 0 4px 8px var(--button-shadow);
    transition: all 0.2s ease-in-out;
}
.back-button:hover {
    background: var(--button-bg-start);
}

/* --- Autogenerated Tailwind classes can be left out, but styles below are for reference --- */
.block-i { background-color: #00e0e0; border: 1px solid #00c0c0; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.block-o { background-color: #e0e000; border: 1px solid #c0c000; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.block-t { background-color: #a000e0; border: 1px solid #8000c0; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.block-l { background-color: #e0a000; border: 1px solid #c08000; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.block-j { background-color: #0000e0; border: 1px solid #0000c0; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.block-s { background-color: #00e000; border: 1px solid #00c000; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.block-z { background-color: #e00000; border: 1px solid #c00000; box-shadow: inset 0 0 5px rgba(255,255,255,0.4); }
.btn-control { background: linear-gradient(to bottom, var(--button-bg-start), var(--button-bg-end)); border: 1px solid var(--button-border); box-shadow: 0 4px 8px var(--button-shadow), inset 0 1px 1px var(--button-inset-shadow); transition: all 0.2s ease-in-out; }
.btn-control:active { background: linear-gradient(to top, var(--button-bg-start), var(--button-bg-end)); transform: translateY(2px); box-shadow: 0 2px 4px var(--button-shadow), inset 0 1px 1px var(--button-inset-shadow); }
.text-glow { text-shadow: 0 0 8px var(--text-glow-color), 0 0 12px var(--text-glow-color); }